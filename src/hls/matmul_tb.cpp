#include <stdio.h>
#include <iostream>
#include "matmul.hpp"
#include "ap_axi_sdata.h"
#include "hls_stream.h"

int main() {

	hls::stream<ap_axis<32,0,0,0> > input, output;


	float input_img[100] = {0.56470588, 0.63921569, 0.49411765, 0.38431373, 0.35294118, 0.29803922,
	0.44705882, 0.54117647, 0.6, 0.63529412, 0.5372549, 0.64313725, 0.59607843, 0.35686275, 0.21568627,
	0.08235294, 0.21568627, 0.59215686, 0.65098039, 0.69411765, 0.5254902, 0.65098039, 0.69411765,
	0.3372549, 0.0627451, 0.07843137, 0.10980392, 0.47843137, 0.71372549, 0.76078431, 0.51372549,
	0.63921569, 0.71764706, 0.3372549, 0.08627451, 0.09411765, 0.14117647, 0.37647059, 0.78431373, 0.82352941,
	0.54509804, 0.64705882, 0.74901961, 0.43137255, 0.19607843, 0.10588235, 0.17647059, 0.52941176, 0.85098039, 0.88235294,
	0.62745098, 0.68627451, 0.78431373, 0.76862745, 0.32941176, 0.23137255, 0.34509804, 0.82352941, 0.91372549, 0.93333333,
	0.70588235, 0.74117647, 0.81176471, 0.88235294, 0.83921569, 0.76078431, 0.87843137, 0.92941176, 0.95686275, 0.94901961,
	0.78039216, 0.81176471, 0.85882353, 0.91372549, 0.92156863, 0.92941176, 0.95294118, 0.97254902, 0.95294118, 0.83529412,
	0.85098039, 0.88627451, 0.91372549, 0.95686275, 0.96862745, 0.97647059, 0.97647059, 0.9254902,  0.83529412, 0.61176471,
	0.91764706, 0.93333333, 0.95294118, 0.98039216, 0.97647059, 0.94117647, 0.89019608, 0.85098039, 0.81568627, 0.69019608}; // 1
	//input.write(input_img);
	mydata_t tmp;

	for(int i = 0;i < 100;i++){
			tmp.data = input_img[i]*255.0;
			tmp.keep = 1;
			tmp.strb = 1;
			tmp.user = 1;
			if(i==99)
				tmp.last = 1;
			else
				tmp.last = 0;
			tmp.id = 0;
			tmp.dest = 1;
			input.write(tmp);
		}
	float pred = nn_inference(input,output);
	//output.read(pred);
	std::cout << std::endl;
	std::cout << "NN Prediction: " << pred << std::endl;
	std::cout << std::endl;

	float input_img1[100] = {0.6, 0.56078431, 0.52156863, 0.49411765, 0.59607843, 0.56862745, 0.42352941, 0.36470588, 0.41176471, 0.42352941,
	0.67843137, 0.65098039, 0.59607843, 0.55686275, 0.49803922, 0.37647059, 0.31372549, 0.35686275, 0.42352941, 0.42352941,
	0.74117647, 0.70588235, 0.65490196, 0.32941176, 0.14509804, 0.07058824, 0.08627451, 0.33333333, 0.46666667, 0.44705882,
	0.80392157, 0.76470588, 0.61960784, 0.31372549, 0.10196078, 0.07843137, 0.09019608, 0.35294118, 0.53333333, 0.52156863,
	0.86666667, 0.82352941, 0.6745098,  0.34117647, 0.09411765, 0.13333333, 0.12156863, 0.50588235, 0.6, 0.59215686,
	0.91372549, 0.89803922, 0.8627451,  0.32156863, 0.14117647, 0.25098039, 0.28627451, 0.67843137, 0.67058824, 0.65098039,
	0.94509804, 0.94509804, 0.92156863, 0.81568627, 0.56078431, 0.58039216, 0.73333333, 0.76470588, 0.74117647, 0.71764706,
	0.90196078, 0.95294118, 0.94901961, 0.93333333, 0.90588235, 0.88627451, 0.8627451,  0.83921569, 0.81176471, 0.77254902,
	0.80392157, 0.8627451,  0.92156863, 0.94509804, 0.94509804, 0.93333333, 0.91372549, 0.89411765, 0.86666667, 0.83921569,
	0.80784314, 0.82745098, 0.83529412, 0.85882353, 0.89411765, 0.92156863, 0.93333333, 0.92941176, 0.90980392, 0.89411765}; // 3
	mydata_t tmp1;

		for(int i = 0;i < 100;i++){
				tmp1.data = input_img1[i]*255.0;
				tmp1.keep = 1;
				tmp1.strb = 1;
				tmp1.user = 1;
				if(i==99)
					tmp1.last = 1;
				else
					tmp1.last = 0;
				tmp1.id = 0;
				tmp1.dest = 1;
				input.write(tmp);
			}
		float pred1 = nn_inference(input,output);
	std::cout << std::endl;
	std::cout << "NN Prediction: " << pred1 << std::endl;
	std::cout << std::endl;


	float input_img2[100] = {0.94901961, 0.90588235, 0.83137255, 0.62745098, 0.34901961, 0.37647059,
	0.43137255, 0.42745098, 0.42745098, 0.54117647, 0.95294118, 0.9254902,  0.76470588, 0.2745098,  0.18431373, 0.07843137,
	0.23137255, 0.50196078, 0.61960784, 0.61568627, 0.97254902, 0.9372549,  0.60784314, 0.24705882, 0.09803922, 0.09411765,
	0.18431373, 0.53333333, 0.54901961, 0.49411765, 0.96470588, 0.96470588, 0.69019608, 0.16078431, 0.18823529, 0.21568627,
	0.12156863, 0.32156863, 0.43921569, 0.45882353, 0.93333333, 0.97647059, 0.92156863, 0.41568627, 0.40392157, 0.20392157,
	0.14117647, 0.46666667, 0.50980392, 0.47058824, 0.88235294, 0.96862745, 0.95294118, 0.83921569, 0.52941176, 0.45490196,
	0.61176471, 0.6,	    0.55294118, 0.49019608, 0.85098039, 0.9372549,  0.96862745, 0.92156863, 0.85490196, 0.77254902,
	0.69803922, 0.64705882, 0.59607843, 0.52941176, 0.85490196, 0.88235294, 0.96078431, 0.94509804, 0.89411765, 0.82352941,
	0.75686275, 0.68627451, 0.62745098, 0.55686275, 0.84705882, 0.84705882, 0.92156863, 0.96470588, 0.9254902,  0.8627451,
	0.79215686, 0.7254902,  0.65490196, 0.55686275, 0.83529412, 0.80392157, 0.83529412, 0.95294118, 0.94509804, 0.89019608,
	0.81960784, 0.75294118, 0.68627451, 0.59607843}; // 4
	mydata_t tmp2;

		for(int i = 0;i < 100;i++){
				tmp2.data = input_img2[i]*255.0;
				tmp2.keep = 1;
				tmp2.strb = 1;
				tmp2.user = 1;
				if(i==99)
					tmp2.last = 1;
				else
					tmp2.last = 0;
				tmp2.id = 0;
				tmp2.dest = 1;
				input.write(tmp2);
			}
		float pred2 = nn_inference(input,output);
	std::cout << std::endl;
	std::cout << "NN Prediction: " << pred2 << std::endl;
	std::cout << std::endl;


	std::cout << "Success" << std::endl;
	return 0;


}
